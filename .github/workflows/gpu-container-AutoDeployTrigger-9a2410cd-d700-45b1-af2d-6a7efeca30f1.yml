name: Deploy to AWS

on:
  push:
    branches: [main]
    paths:
      - "backend/**"
      - "frontend/**"
      - ".github/workflows/gpu-container-AutoDeployTrigger-9a2410cd-d700-45b1-af2d-6a7efeca30f1.yml"
      - "amplify.yml"

  workflow_dispatch:

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Update Amplify environment variable with backend URL and Firebase config
      - name: Update Amplify Environment Variables
        run: |
          aws amplify update-app \
            --app-id ${{ secrets.AWS_AMPLIFY_APP_ID }} \
            --environment-variables "REACT_APP_API_URL=${{ secrets.AWS_INVOKE_URL }},REACT_APP_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }},REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }},REACT_APP_FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}"

  deploy-backend:
    runs-on: ubuntu-latest
    needs: deploy-frontend
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Set up Firebase Admin SDK credentials
      - name: Setup Firebase Credentials
        run: |
          echo '${{ secrets.FIREBASE_ADMIN_SDK_JSON }}' > backend/firebase-adminsdk.json

      # Login to ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Create ECR repository if it doesn't exist
      - name: Create ECR Repository if it doesn't exist
        run: |
          aws ecr describe-repositories --repository-names research-assistant || \
          aws ecr create-repository --repository-name research-assistant

      # Build and push Docker image to ECR
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: research-assistant
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./backend
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY:latest" >> $GITHUB_ENV
          
      # Remove existing Lambda function if it exists - this is needed to change package type
      - name: Delete existing Lambda function if it exists
        run: |
          # Try to delete the function, but don't fail if it doesn't exist
          aws lambda delete-function --function-name research-assistant-backend || true
          # Wait to ensure deletion is complete
          sleep 5
      
      # Create new Lambda function with container image
      - name: Create Lambda function with container image
        run: |
          # Create an IAM role for Lambda if one doesn't exist yet
          LAMBDA_ROLE_ARN=$(aws iam get-role --role-name research-assistant-lambda-role --query 'Role.Arn' --output text 2>/dev/null || echo "")
          
          if [ -z "$LAMBDA_ROLE_ARN" ]; then
            echo "Creating new Lambda execution role..."
            
            # Create policy document for trust relationship
            cat > trust-policy.json << 'EOF'
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          }
          EOF
            
            # Create the role
            LAMBDA_ROLE_ARN=$(aws iam create-role \
              --role-name research-assistant-lambda-role \
              --assume-role-policy-document file://trust-policy.json \
              --query 'Role.Arn' --output text)
              
            # Attach basic Lambda execution policy
            aws iam attach-role-policy \
              --role-name research-assistant-lambda-role \
              --policy-arn arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
              
            # Wait for role to propagate
            echo "Waiting for role to propagate..."
            sleep 10
          else
            echo "Using existing Lambda role: $LAMBDA_ROLE_ARN"
          fi
          
          # Create the Lambda function with the role
          aws lambda create-function \
            --function-name research-assistant-backend \
            --package-type Image \
            --code ImageUri=${{ env.IMAGE_URI }} \
            --role "$LAMBDA_ROLE_ARN" \
            --timeout 300 \
            --memory-size 2048 \
            --environment "Variables={DEPLOYMENT=aws,ENVIRONMENT=production,REDIS_HOST=${{ secrets.REDIS_HOST }},REDIS_PORT=${{ secrets.REDIS_PORT }},REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }},REDIS_USERNAME=${{ secrets.REDIS_USERNAME }},FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }},STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }},STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }},STRIPE_PRO_PRICE_ID=${{ secrets.STRIPE_PRO_PRICE_ID }},STRIPE_PLUS_PRICE_ID=${{ secrets.STRIPE_PLUS_PRICE_ID }},OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }},AZURE_SPEECH_KEY=${{ secrets.AZURE_SPEECH_KEY }}}"

      # Add function URL configuration
      - name: Add Lambda function URL
        run: |
          aws lambda create-function-url-config \
            --function-name research-assistant-backend \
            --auth-type NONE || true
