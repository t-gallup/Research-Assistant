name: Deploy to AWS

on:
  push:
    branches: [main]
    paths:
      - "backend/**"
      - "frontend/**"
      - ".github/workflows/gpu-container-AutoDeployTrigger-9a2410cd-d700-45b1-af2d-6a7efeca30f1.yml"
      - "amplify.yml"

  workflow_dispatch:

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Set up Firebase Admin SDK credentials
      - name: Setup Firebase Credentials
        run: |
          echo '${{ secrets.FIREBASE_ADMIN_SDK_JSON }}' > backend/firebase-adminsdk.json

      # Option 1: Deploy backend to Lambda
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install basic dependencies for build environment
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install wheel setuptools
      
      # Instead of using layers, include all dependencies in the main Lambda package
      - name: Build Lambda package with all dependencies
        run: |
          mkdir -p deployment/lambda
          cd backend
          
          # Install all dependencies
          pip install -r requirements.txt -t ../deployment/lambda
          
          # Copy application files
          cp -r *.py ../deployment/lambda/
          cp firebase-adminsdk.json ../deployment/lambda/
          
          # Clean up unnecessary files to reduce size
          cd ../deployment/lambda
          find . -type d -name "__pycache__" -exec rm -rf {} +
          find . -type d -name "*.dist-info" -exec rm -rf {} +
          find . -type d -name "*.egg-info" -exec rm -rf {} +
          find . -name "*.pyc" -delete
          
          # Remove test directories to save space
          find . -type d -name "tests" -exec rm -rf {} +
          find . -type d -name "test" -exec rm -rf {} +
          
          # Create zip with all dependencies
          zip -r ../lambda_function.zip .
        
      - name: Upload Lambda package to S3
        run: |
          aws s3 cp deployment/lambda_function.zip s3://${{ secrets.AWS_S3_BUCKET }}/lambda_function.zip
      
      - name: Deploy to Lambda from S3 without Layers
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          function_name: research-assistant-backend
          s3_bucket: ${{ secrets.AWS_S3_BUCKET }}
          s3_key: lambda_function.zip
          environment: |
            DEPLOYMENT=aws
            ENVIRONMENT=production
            REDIS_HOST=${{ secrets.REDIS_HOST }}
            REDIS_PORT=${{ secrets.REDIS_PORT }}
            REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
            REDIS_USERNAME=${{ secrets.REDIS_USERNAME }}
            FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}
            STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
            STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }}
            STRIPE_PRO_PRICE_ID=${{ secrets.STRIPE_PRO_PRICE_ID }}
            STRIPE_PLUS_PRICE_ID=${{ secrets.STRIPE_PLUS_PRICE_ID }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            AZURE_SPEECH_KEY=${{ secrets.AZURE_SPEECH_KEY }}

      # Update Amplify environment variable with backend URL
      - name: Update Amplify Environment Variables
        run: |
          aws amplify update-app --app-id ${{ secrets.AWS_AMPLIFY_APP_ID }} \
            --environment-variables REACT_APP_API_URL=${{ secrets.AWS_INVOKE_URL }},\
            REACT_APP_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }},\
            REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }},\
            REACT_APP_FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}

  # Frontend deployment is handled automatically by Amplify
  # No additional steps needed as Amplify will detect the push to the repository
  # and trigger a build and deploy based on the amplify.yml configuration